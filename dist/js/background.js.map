{"version":3,"file":"background.js","mappings":"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","sources":["webpack://powerful-pixiv-downloader/./src/ts/ManageFollowing.ts","webpack://powerful-pixiv-downloader/webpack/bootstrap","webpack://powerful-pixiv-downloader/webpack/runtime/make namespace object","webpack://powerful-pixiv-downloader/./src/ts/background.ts"],"sourcesContent":["export interface FollowingData {\n  /** 指示这个对象属于哪个用户 id **/\n  user: string\n  /** 用户的关注用户的 id 列表 **/\n  following: string[]\n  /** 此用户的关注用户总数。这是公开和非公开关注的数量之和。因为本程序不区分一个关注是公开的还是非公开的\n   *  注意这可能与 following 的 length 不同，因为这是按照 API 返回的 total 计算的，但是 API 返回的实际用户数量可能比 total 少\n   */\n  total: number\n  /** 最后一次更新本地数据的时间戳 **/\n  time: number\n}\n\nexport type List = FollowingData[]\n\ninterface SetData {\n  /**数据属于哪个用户 */\n  user: string\n  /**此用户的关注用户的 id 列表 **/\n  following: string[]\n  /**此用户的关注用户总数。注意这可能与 following 的 length 不同*/\n  total: number\n}\n\ninterface UserOperate {\n  action: '' | 'add' | 'remove'\n  loggedUserID: string\n  userID: string\n}\n\n// 这是一个后台脚本\nclass ManageFollowing {\n  constructor() {\n    this.restore()\n\n    chrome.runtime.onInstalled.addListener(async () => {\n      // 每次更新或刷新扩展时尝试读取数据，如果数据不存在则设置数据\n      const data = await chrome.storage.local.get(this.store)\n      if (\n        data[this.store] === undefined ||\n        Array.isArray(data[this.store]) === false\n      ) {\n        this.storage()\n      }\n    })\n\n    chrome.runtime.onMessage.addListener(async (msg, sender) => {\n      if (msg.msg === 'requestFollowingData') {\n        this.dispatchFollowingList(sender?.tab)\n      }\n\n      if (msg.msg === 'needUpdateFollowingData') {\n        if (this.status === 'locked') {\n          // 查询上次执行更新任务的标签页还是否存在，如果不存在，\n          // 则改为让这次发起请求的标签页执行更新任务\n          const tabs = await this.findAllPixivTab()\n          const find = tabs.find((tab) => tab.id === this.updateTaskTabID)\n          if (!find) {\n            this.updateTaskTabID = sender!.tab!.id!\n          } else {\n            // 如果上次执行更新任务的标签页依然存在，且状态锁定，则拒绝这次请求\n            return\n          }\n        } else {\n          this.updateTaskTabID = sender!.tab!.id!\n        }\n\n        this.status = 'locked'\n\n        chrome.tabs.sendMessage(this.updateTaskTabID, {\n          msg: 'updateFollowingData',\n        })\n      }\n\n      if (msg.msg === 'setFollowingData') {\n        const data = msg.data as SetData\n        // 当前台获取新的关注列表完成之后，会发送此消息。\n        // 如果发送消息的页面和发起请求的页面是同一个，则解除锁定状态\n        if (sender!.tab!.id === this.updateTaskTabID) {\n          // set 操作不会被放入等待队列中，而且总是会被立即执行\n          // 这是因为在请求数据的过程中可能产生了其他操作，set 操作的数据可能已经是旧的了\n          // 所以需要先应用 set 里的数据，然后再执行其他操作，在旧数据的基础上进行修改\n          this.setData(data)\n\n          // 如果队列中没有等待的操作，则立即派发数据并储存数据\n          // 如果有等待的操作，则不派发和储存数据，因为稍后队列执行完毕后也会派发和储存数据\n          // 这是为了避免重复派发和储存数据，避免影响性能\n          if (this.queue.length === 0) {\n            this.dispatchFollowingList()\n            this.storage()\n          }\n\n          this.status = 'idle'\n          return\n        }\n        // 如果不是同一个页面，这个 set 操作会被丢弃\n      }\n    })\n\n    // 监听用户新增或取消一个关注的请求\n    // 由于某些逻辑相似，就添加到一个监听器里了\n    chrome.webRequest.onBeforeRequest.addListener(\n      (details) => {\n        if (details.method === 'POST') {\n          if (details?.requestBody?.formData) {\n            let operate: UserOperate = {\n              action: '',\n              loggedUserID: '',\n              userID: '',\n            }\n\n            // 检查数据格式是否是自己需要的，以防这个 URL 有其他用途\n            const formData = details.requestBody.formData\n            if (details.url.endsWith('bookmark_add.php')) {\n              const check =\n                formData.mode &&\n                formData.mode[0] === 'add' &&\n                formData.user_id &&\n                formData.user_id[0]\n              if (check) {\n                operate.action = 'add'\n                operate.userID = formData.user_id[0]\n              } else {\n                return\n              }\n            }\n\n            if (details.url.endsWith('rpc_group_setting.php')) {\n              const check =\n                formData.mode &&\n                formData.mode[0] === 'del' &&\n                formData.type &&\n                formData.type[0] === 'bookuser' &&\n                formData.id &&\n                formData.id[0]\n              if (check) {\n                operate.action = 'remove'\n                operate.userID = formData.id[0]\n              } else {\n                return\n              }\n            }\n\n            // 获取发起请求的标签页里的登录的用户 ID\n            chrome.tabs.sendMessage(\n              details.tabId,\n              {\n                msg: 'getLoggedUserID',\n              },\n              (response) => {\n                if (response?.loggedUserID) {\n                  operate.loggedUserID = response.loggedUserID\n                  this.queue.push(operate)\n                  this.executionQueue()\n                }\n              }\n            )\n          }\n        }\n      },\n      {\n        urls: [\n          'https://*.pixiv.net/bookmark_add.php',\n          'https://*.pixiv.net/rpc_group_setting.php',\n        ],\n        types: ['xmlhttprequest'],\n      },\n      ['requestBody']\n    )\n\n    setInterval(() => {\n      this.executionQueue()\n    }, 1000)\n\n    this.checkDeadlock()\n\n    this.clearUnusedData()\n  }\n\n  private readonly store = 'following'\n\n  private data: List = []\n\n  /**当状态为 locked 时，如果需要增加或删除某个关注的用户，则将其放入等待队列 */\n  private queue: UserOperate[] = []\n\n  private status: 'idle' | 'loading' | 'locked' = 'idle'\n\n  private updateTaskTabID = 0\n\n  private async restore() {\n    if (this.status !== 'idle') {\n      return\n    }\n\n    this.status = 'loading'\n    const data = await chrome.storage.local.get(this.store)\n    if (data[this.store] && Array.isArray(data[this.store])) {\n      this.data = data[this.store]\n      this.status = 'idle'\n    } else {\n      return setTimeout(() => {\n        this.restore()\n      }, 500)\n    }\n  }\n\n  /**向前台脚本派发数据\n   * 可以指定向哪个 tab 派发\n   * 如果未指定 tab，则向所有的 pixiv 标签页派发\n   */\n  private async dispatchFollowingList(tab?: chrome.tabs.Tab) {\n    if (tab?.id) {\n      chrome.tabs.sendMessage(tab.id, {\n        msg: 'dispathFollowingData',\n        data: this.data,\n      })\n    } else {\n      const tabs = await this.findAllPixivTab()\n      for (const tab of tabs) {\n        chrome.tabs.sendMessage(tab.id!, {\n          msg: 'dispathFollowingData',\n          data: this.data,\n        })\n      }\n    }\n  }\n\n  private async dispatchRecaptchaToken(\n    recaptcha_enterprise_score_token: string\n  ) {\n    const tabs = await this.findAllPixivTab()\n    for (const tab of tabs) {\n      chrome.tabs.sendMessage(tab.id!, {\n        msg: 'dispatchRecaptchaToken',\n        data: recaptcha_enterprise_score_token,\n      })\n    }\n  }\n\n  private storage() {\n    return chrome.storage.local.set({ following: this.data })\n  }\n\n  /**执行队列中的所有操作 */\n  private executionQueue() {\n    if (this.status !== 'idle' || this.queue.length === 0) {\n      return\n    }\n\n    while (this.queue.length > 0) {\n      // set 操作不会在此处执行\n      const queue = this.queue.shift()!\n      this.addOrRemoveOne(queue)\n    }\n\n    // 队列中的所有操作完成后，派发和储存数据\n    this.dispatchFollowingList()\n\n    this.storage()\n  }\n\n  private setData(data: SetData) {\n    const index = this.data.findIndex(\n      (following) => following.user === data.user\n    )\n    if (index > -1) {\n      this.data[index].following = data.following\n      this.data[index].total = data.total\n      this.data[index].time = new Date().getTime()\n    } else {\n      this.data.push({\n        user: data.user,\n        following: data.following,\n        total: data.total,\n        time: new Date().getTime(),\n      })\n    }\n  }\n\n  private addOrRemoveOne(operate: UserOperate) {\n    const i = this.data.findIndex(\n      (following) => following.user === operate.loggedUserID\n    )\n    if (i === -1) {\n      return\n    }\n\n    if (operate.action === 'add') {\n      this.data[i].following.push(operate.userID)\n      this.data[i].total = this.data[i].total + 1\n    } else if (operate.action === 'remove') {\n      const index = this.data[i].following.findIndex(\n        (id) => id === operate.userID\n      )\n      if (index > -1) {\n        this.data[i].following.splice(index, 1)\n        this.data[i].total = this.data[i].total - 1\n      }\n    } else {\n      return\n    }\n\n    this.data[i].time = new Date().getTime()\n  }\n\n  private async findAllPixivTab() {\n    const tabs = await chrome.tabs.query({\n      url: 'https://*.pixiv.net/*',\n    })\n    return tabs\n  }\n\n  /**解除死锁\n   * 一个标签页在执行更新任务时可能会被用户关闭，这会导致锁死\n   * 定时检查执行更新任务的标签页是否还存在，如果不存在则解除死锁\n   */\n  private checkDeadlock() {\n    setInterval(async () => {\n      if (this.status === 'locked') {\n        const tabs = await this.findAllPixivTab()\n        const find = tabs.find((tab) => tab.id === this.updateTaskTabID)\n        if (!find) {\n          this.status = 'idle'\n        }\n      }\n    }, 30000)\n  }\n\n  /**如果某个用户的关注数据 30 天没有修改过，则清除对应的数据 */\n  private clearUnusedData() {\n    setInterval(() => {\n      const day30ms = 2592000000\n      for (let index = 0; index < this.data.length; index++) {\n        const item = this.data[index]\n        if (new Date().getTime() - item.time > day30ms) {\n          this.data.splice(index, 1)\n\n          this.dispatchFollowingList()\n          this.storage()\n          break\n        }\n      }\n    }, 3600000)\n  }\n}\n\nnew ManageFollowing()\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DonwloadListData, SendToBackEndData } from './download/DownloadType.d'\nimport './ManageFollowing'\n\n// 当点击扩展图标时，显示/隐藏下载面板\nchrome.action.onClicked.addListener(function (tab) {\n  // 在本程序没有权限的页面上点击扩展图标时，url 始终是 undefined，此时不发送消息\n  if (!tab.url) {\n    return\n  }\n\n  chrome.tabs.sendMessage(tab.id!, {\n    msg: 'click_icon',\n  })\n})\n\n// 当扩展被安装、被更新、或者浏览器升级时，初始化数据\nchrome.runtime.onInstalled.addListener(() => {\n  chrome.storage.local.set({ batchNo: {}, idList: {} })\n})\n\n// 存储每个下载任务的数据，这是因为下载完成的顺序和前台发送的顺序可能不一致，所以需要把数据保存起来以供使用\nconst dlData: DonwloadListData = {}\n// 当浏览器开始下载一个由前台传递的文件时，会把一些数据保存到 dlData 里\n// 当浏览器把这个文件下载完毕之后，从 dlData 里取出保存的数据\n// 注意：虽然 Service worker 被回收时，变量也会被清空，但是这对于 dlData 的使用没有影响\n// 只要在 Service worker 被回收之前，浏览器把传递给它的下载任务全部下载完了，dlData 里保存的数据也就不再需要使用了，所以即使此时被清空了也无所谓。\n// 如果浏览器还没有把传递给它的下载任务全部下载完成，Service worker 就已经被回收，那么会有影响（文件下载完成之后找不到之前保存的数据了）。但是理论上，浏览器正在执行下载任务时这个 Service worker 不会被回收，所以不会发生下载完成前就被回收的情况。\n\ntype batchNoType = { [key: string]: number }\ntype idListType = { [key: string]: string[] }\n\n// 使用每个页面的 tabId 作为索引，储存此页面里当前下载任务的编号。用来判断不同批次的下载\nlet batchNo: batchNoType = {}\n\n// 使用每个页面的 tabId 作为索引，储存此页面里所发送的下载请求的作品 id 列表，用来判断重复的任务\nlet idList: idListType = {}\n\n// batchNo 和 idList 需要持久化存储（但是当浏览器关闭并重新启动时可以清空，因为此时前台的下载任务必然和浏览器关闭之前的不是同一批了，所以旧的数据已经没用了）\n// 如果不进行持久化存储，如果前台任务处于下载途中，后台 SW 被回收了，那么变量也会被清除。之后前台传递过来的可能还是同一批下载里的任务，但是后台却丢失了记录。这可能会导致下载出现重复文件等异常。\n// 实际上，下载时后台 SW 会持续存在很长时间，不会轻易被回收的。持久化存储只是为了以防万一\n\n// 封装 chrome.storage.local.set。不需要等待回调\nasync function setData(data: { [key: string]: any }) {\n  return chrome.storage.local.set(data)\n}\n\nchrome.runtime.onMessage.addListener(async function (\n  msg: SendToBackEndData,\n  sender\n) {\n  // save_work_file 下载作品的文件\n  if (msg.msg === 'save_work_file') {\n    // 当处于初始状态时，或者变量被回收了，就从存储中读取数据储存在变量中\n    // 之后每当要使用这两个数据时，从变量读取，而不是从存储中获得。这样就解决了数据不同步的问题，而且性能更高\n    if (Object.keys(batchNo).length === 0) {\n      const data = await chrome.storage.local.get(['batchNo', 'idList'])\n      batchNo = data.batchNo\n      idList = data.idList\n    }\n\n    const tabId = sender.tab!.id!\n\n    // 如果开始了新一批的下载，重设批次编号，并清空下载索引\n    if (batchNo[tabId] !== msg.taskBatch) {\n      batchNo[tabId] = msg.taskBatch\n      idList[tabId] = []\n      setData({ batchNo, idList })\n      // 这里存储数据时不需要使用 await，因为后面使用的是全局变量，所以不需要关心存储数据的同步问题\n    }\n\n    // 检查任务是否重复，不重复则下载\n    if (!idList[tabId].includes(msg.id)) {\n      // 储存该任务的索引\n      idList[tabId].push(msg.id)\n      setData({ idList })\n\n      // 开始下载\n      chrome.downloads.download(\n        {\n          url: msg.fileUrl,\n          filename: msg.fileName,\n          conflictAction: 'overwrite',\n          saveAs: false,\n        },\n        (id) => {\n          // id 是 Chrome 新建立的下载任务的 id\n          // 使用下载任务的 id 作为 key 保存数据\n          const data = {\n            url: msg.fileUrl,\n            id: msg.id,\n            tabId: tabId,\n            uuid: false,\n          }\n          dlData[id] = data\n        }\n      )\n    }\n  }\n\n  // save_description_file 下载作品的元数据/简介 TXT 文件，不需要返回下载状态\n  // save_novel_cover_file 下载小说的封面图片\n  if (\n    msg.msg === 'save_description_file' ||\n    msg.msg === 'save_novel_cover_file' ||\n    msg.msg === 'save_novel_embedded_image'\n  ) {\n    chrome.downloads.download({\n      url: msg.fileUrl,\n      filename: msg.fileName,\n      conflictAction: 'overwrite',\n      saveAs: false,\n    })\n  }\n\n  if (msg.msg === 'clearDownloadsTempData') {\n    if (sender.tab?.id) {\n      const tabId = sender.tab.id\n      delete idList[tabId]\n      delete batchNo[tabId]\n\n      setData({ batchNo, idList })\n    }\n  }\n})\n\n// 判断文件名是否变成了 UUID 格式。因为文件名处于整个绝对路径的中间，所以没加首尾标记 ^ $\nconst UUIDRegexp =\n  /[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}/\n\n// 监听下载变化事件\n// 每个下载会触发两次 onChanged 事件\nchrome.downloads.onChanged.addListener(async function (detail) {\n  // 根据 detail.id 取出保存的数据\n  const data = dlData[detail.id]\n  if (data) {\n    let msg = ''\n    let err = ''\n\n    // 判断当前文件名是否正常。下载时必定会有一次 detail.filename.current 有值\n    if (detail.filename && detail.filename.current) {\n      const changedName = detail.filename.current\n      if (changedName.match(UUIDRegexp) !== null) {\n        // 文件名是 UUID\n        data.uuid = true\n      }\n    }\n\n    if (detail.state && detail.state.current === 'complete') {\n      msg = 'downloaded'\n    }\n\n    if (detail.error && detail.error.current) {\n      msg = 'download_err'\n      err = detail.error.current\n      // 当保存一个文件出错时，从任务记录列表里删除它，以便前台重试下载\n      const idIndex = idList[data.tabId].findIndex((val) => val === data.id)\n      idList[data.tabId][idIndex] = ''\n      setData({ idList })\n    }\n\n    // 返回信息\n    if (msg) {\n      chrome.tabs.sendMessage(data.tabId, { msg, data, err })\n      // 清除这个任务的数据\n      dlData[detail.id] = null\n    }\n  }\n})\n\n// 清除不需要的数据，避免数据体积越来越大\nasync function clearData() {\n  for (const key of Object.keys(idList)) {\n    const tabId = parseInt(key)\n    try {\n      await chrome.tabs.get(tabId)\n    } catch (error) {\n      // 如果建立下载任务的标签页已经不存在，则会触发错误，如：\n      // Unchecked runtime.lastError: No tab with id: 1943988409.\n      // 此时删除对应的数据\n      delete idList[tabId]\n      delete batchNo[tabId]\n    }\n  }\n\n  setData({ batchNo, idList })\n}\n\nsetInterval(() => {\n  clearData()\n}, 3600000)\n"],"names":[],"sourceRoot":""}